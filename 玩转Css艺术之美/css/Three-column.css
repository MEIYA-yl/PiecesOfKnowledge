.container {
  display: flex;
  width: 100vw;
  height: 100vh;
}

.container .aside {
  width: 15vw;
  background-color: seagreen;
}

.container .banner {
  width: 20vw;
  background-color: sienna;
}

.container .main {
  flex: 1;
  padding: 10px;
  background-color: rebeccapurple;
}

.container .main .hover-tips {
  position: relative;
  padding: 0 20px;
  height: 40px;
  line-height: 40px;
  border-radius: 5px;
  color: white;
  background-color: red;
}

.container .main .btn-1::after {
  position: absolute;
  left: 0px;
  top: 0px;
  width: 100%;
  height: inherit;
  opacity: 0;
  border-radius: 10px;
  font-size: 16px;
  text-align: center;
  content: attr(msg);
  background-color: rgb(96, 96, 96);
  transition: all 300ms;
}

.container .main .btn-1:hover::after {
  left: calc(100% + 20px);
  opacity: 1;
}

.container .main .btn-2:empty::after {
  content: attr(href);
}

.container .main .iterative-counter ul {
  counter-reset: index 0 count 0 weight 0;
}

.container .iterative-counter li {
  display: flex;
  position: relative;
  align-items: center;
  counter-increment: index 1;
}

.container .iterative-counter li + li {
  margin-top: 10px;
}

.container .iterative-counter li::before {
  content: counter(index) '„ÄÅ';
}

input {
  width: 0px;
  height: 0px;
}

input:checked + label::before {
  color: rgb(255, 255, 255);
  content: '\2713';
}

label {
  display: flex;
  align-items: center;
  height: 20px;
}

label::before {
  width: 16px;
  height: 16px;
  line-height: 20px;
  text-align: center;
  border: 1px solid rgb(255, 255, 255);
  margin-right: 5px;
  cursor: pointer;
  color: transparent;
  content: '';
  transition: all 300ms;
}

.main .iterative-counter p {
  margin-top: 10px;
}
.main .iterative-counter p.count::after {
  content: counter(count) attr(data-unit);
}
.main .iterative-counter p.weight::after {
  content: counter(weight) attr(data-unit);
}

#angular:checked {
  counter-increment: count 1 weight 20;
}
#react:checked {
  counter-increment: count 1 weight 45;
}
#vue:checked {
  counter-increment: count 1 weight 35;
}
