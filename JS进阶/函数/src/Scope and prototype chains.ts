/** @format */

// NOTICE 作用域：作用域的范围信息，在预解析间段就已经确认了。

// NOTICE 作用域链：在函数中寻找一个变量的值从哪里获取，会从当前的执行期上下文中查找，找不到则会去作用域链中查找。
// 需要注意的是：作用域链是本身存在于函数对象中的一个属性[[scopes]]，因此并不是一层一层向上查找，而是在该函数的预解析阶段就已经确认。

/**
 * 完整作用域链的组成部分
	通过上面的学习，我们知道，每一个函数在声明后，都具备一个属性 [[Scopes]]，该属性中存储了当前函数可访问的所有变量对象。这些变量对象又有所不同。

	Global 全局对象：不会做任何优化，会包含全局对象中的所有属性与方法
	Script 对象：在全局环境下，由 let 和 const 声明的变量对象
	Closure 对象：我们讨论比较多的闭包对象，嵌套函数生成，仅会保存当前作用域能够访问的变量属性
	Local 对象：以上的几种变量对象，都会存在于函数的 [[Scopes]]属性之中，因为他们都能够在函数解析时确认，而 Local 对象则不行，需要在函数的执行过程中才能确定，并且在执行过程中，该对象中的属性是随时会发生变化的，该对象除了会存储当前函数上下文中所有的变量与函数声明，还会额外记录this的指向。
*/
	